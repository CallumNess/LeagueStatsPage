// <auto-generated />
using System;
using LeagueStatsPage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LeagueStatsPage.Migrations
{
    [DbContext(typeof(LeagueStatsPageContext))]
    [Migration("20200401143737_AddTeamsData")]
    partial class AddTeamsData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LeagueStatsPage.Models.PlayerDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<DateTime>("DOB");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Team");

                    b.HasKey("ID");

                    b.ToTable("PlayerDetails");
                });

            modelBuilder.Entity("LeagueStatsPage.Models.Teams", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeamName");

                    b.HasKey("ID");

                    b.ToTable("Teams");

                    b.HasData(
                        new { ID = 1, TeamName = "G2 Esports" },
                        new { ID = 2, TeamName = "Excel Esports" },
                        new { ID = 3, TeamName = "FC Schalke 04 Esports" },
                        new { ID = 4, TeamName = "Fnatic" },
                        new { ID = 5, TeamName = "MAD Lions" },
                        new { ID = 6, TeamName = "Misfits Gaming" },
                        new { ID = 7, TeamName = "Origen" },
                        new { ID = 8, TeamName = "Rogue" },
                        new { ID = 9, TeamName = "SK Gaming" },
                        new { ID = 10, TeamName = "Team Vitality" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
